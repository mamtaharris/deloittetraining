---------------------SETS-------------------------

import java.util.Set;
import java.util.TreeSet;

public class TreeSetDemo {
	public static void main(String[] args) {
			Set s = new TreeSet();
			s.add("1");
			s.add("2");
			s.add("4");
			s.add("1");
			s.add("6");
			s.add("2");
			System.out.println(s);
	}
}

// [1, 2, 4, 6]

-------------------LISTS------------------------------

import java.util.LinkedList;
import java.util.List;

public class LinkedListDemo {
	public static void main(String[] args) {
			List <String> s = new LinkedList <String>();
			s.add("1");
			s.add("2");
			s.add("3");
			s.add("4");
			s.add("5");
			System.out.println(s);
			
			s.add(2, "10");
			System.out.println(s);

			s.remove(s.size()-1);
			System.out.println(s);
	}
}

/*
[1, 2, 3, 4, 5]
[1, 2, 10, 3, 4, 5]
[1, 2, 10, 3, 4]
*/

-------------------------CUSTOMER----------------------------

public class Customer {
	private int customerId;
	private String customerName;
	private String customerAddress;
	private int billAmount;
	
	public Customer(int customerId, String customerName, String customerAddress, int billAmount) {
		super();
		this.customerId = customerId;
		this.customerName = customerName;
		this.customerAddress = customerAddress;
		this.billAmount = billAmount;
	}

	public int getCustomerId() {
		return customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	public String getCustomerName() {
		return customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	public String getCustomerAddress() {
		return customerAddress;
	}

	public void setCustomerAddress(String customerAddress) {
		this.customerAddress = customerAddress;
	}

	public int getBillAmount() {
		return billAmount;
	}

	public void setBillAmount(int billAmount) {
		this.billAmount = billAmount;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + billAmount;
		result = prime * result + ((customerAddress == null) ? 0 : customerAddress.hashCode());
		result = prime * result + customerId;
		result = prime * result + ((customerName == null) ? 0 : customerName.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Customer other = (Customer) obj;
		if (billAmount != other.billAmount)
			return false;
		if (customerAddress == null) {
			if (other.customerAddress != null)
				return false;
		} else if (!customerAddress.equals(other.customerAddress))
			return false;
		if (customerId != other.customerId)
			return false;
		if (customerName == null) {
			if (other.customerName != null)
				return false;
		} else if (!customerName.equals(other.customerName))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Customer [customerId=" + customerId + ", customerName=" + customerName + ", customerAddress="
				+ customerAddress + ", billAmount=" + billAmount + "]";
	}
}



import java.util.ArrayList;
import java.util.List;

public class CustomerMain {
	public static void main(String[] args) {
		List<Customer> allCustomers = new ArrayList<Customer>();
		
		Customer c1 = new Customer (10,"aaa", "xxx", 50000);
		allCustomers.add(c1);
		allCustomers.add(new Customer(11, "bbb","yyy", 10000));
		
		for (Customer customer : allCustomers)
			System.out.println(customer);
	}
}

---------------------------COMPARABLE---------------------------------------

//sort with name first. if same name then sort by address.

public class Customer implements Comparable <Customer>{
	private int customerId;
	private String customerName;
	private String customerAddress;
	private int billAmount;
	
	public Customer(int customerId, String customerName, String customerAddress, int billAmount) {
		super();
		this.customerId = customerId;
		this.customerName = customerName;
		this.customerAddress = customerAddress;
		this.billAmount = billAmount;
	}

	public int getCustomerId() {
		return customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	public String getCustomerName() {
		return customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	public String getCustomerAddress() {
		return customerAddress;
	}

	public void setCustomerAddress(String customerAddress) {
		this.customerAddress = customerAddress;
	}

	public int getBillAmount() {
		return billAmount;
	}

	public void setBillAmount(int billAmount) {
		this.billAmount = billAmount;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + billAmount;
		result = prime * result + ((customerAddress == null) ? 0 : customerAddress.hashCode());
		result = prime * result + customerId;
		result = prime * result + ((customerName == null) ? 0 : customerName.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Customer other = (Customer) obj;
		if (billAmount != other.billAmount)
			return false;
		if (customerAddress == null) {
			if (other.customerAddress != null)
				return false;
		} else if (!customerAddress.equals(other.customerAddress))
			return false;
		if (customerId != other.customerId)
			return false;
		if (customerName == null) {
			if (other.customerName != null)
				return false;
		} else if (!customerName.equals(other.customerName))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Customer [customerId=" + customerId + ", customerName=" + customerName + ", customerAddress="
				+ customerAddress + ", billAmount=" + billAmount + "]";
	}

	@Override
	public int compareTo(Customer o) {
		if (this.customerName.compareTo(o.customerName) >0)
			return 1;
		else if (this.customerName.compareTo(o.customerName) <0)
			return -1;
		else {
			if (this.customerAddress.compareTo(o.customerAddress) >0)
				return 1;
			else 
				return -1;
		}
			
	
	}
}


import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class CustomerMain {
	public static void main(String[] args) {
		List<Customer> allCustomers = new ArrayList<Customer>();
		
		Customer c1 = new Customer (10,"aaa", "xxx", 50000);
		allCustomers.add(c1);
		allCustomers.add(new Customer(11, "aaa","yyy", 10000));
		allCustomers.add(new Customer(11, "aaa","aaa", 10000));
		allCustomers.add(new Customer(11, "bbb","iii", 10000));
		allCustomers.add(new Customer(11, "aaa","vvv", 10000));
		
		Collections.sort(allCustomers);
		
		for (Customer customer : allCustomers)
			System.out.println(customer);
	}
}

------------------------------------------------------------------------------------